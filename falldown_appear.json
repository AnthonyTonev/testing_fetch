 {
 "title": "falldown_appear",
 "description": "",
 "settings": "\neditor.interface.animation.settings = {\n    \"templates\":\n    [\n      {\n     \"templateStartTime\":0,\n     \"name\": \"Move and sequnced appearing\",\n     \"thumbnail\": \"animation.gif\",\n      \"animations\":{\n      \"fadeIn\":{\n        \"description\":\"appearing by fading in\",\n       \"ease\": \"easeInOutSine\",\n       \"group\": [2, 3, 4]\n      },\n      \"move\": {\n        \"description\":\"falling down\",\n       \"axis\": [0,1],\n       \"ease\":\"easeOutBounce\",\n       \"group\": [0, 1, 5, 6, 7, 8]\n      }\n        \n      },  \n        \n     \"opts\": {\n     \"fadeInStartTime\": {\n      \"name\": \"Fade in Start Time\",\n      \"description\":  \"How fast the objects that appear with fade in\",\n      \"value\": 1\n     },\n  \n       \"speedOfFadeIN\": {\n      \"name\": \"Fade in Speed\",\n      \"description\":  \"How fast the objects that appear with fade in\",\n      \"value\": 1\n     },\n       \n     \"staggeringFadein\": {\n      \"name\": \"Fade in Staggering\",\n      \"description\":  \"Staggering for the objects that appear with fade in\",\n      \"value\": 0.25\n     },\n       \n     \"moveStartTime\": {\n      \"name\": \"Move Start Time\",\n      \"description\":  \"How fast the objects that appear with fade in\",\n      \"value\": 1\n     },\n       \n     \"speedOfMove\": {\n      \"name\": \"Move Speed\",\n      \"description\":  \"How fast the objects drop\",\n      \"value\": 1\n     },\n       \n   \n     \"staggeringMove\": {\n      \"name\": \"Move Staggering\",\n      \"description\":  \"Staggering for the objects that appear with dropping\",\n      \"value\": 0.35\n     }\n    } \n      },\n      \n    ]\n  \n  }\n\n\n\nconst builder = editor.interface.builder;\nbuilder.parent.innerHTML = '';\nconst animations = editor.interface.animation.settings.templates\nconst current_template =  animations[0];\n\nconst opts = current_template.opts;\n\nfor(const op in opts){\nbuilder.create('a',{textContent:opts[op].name +': ', class:'ui',style:'pointer-events:none'});\nconst input = builder.create('input',{class:'ui',type:'number',min:0,max:10, step:0.1, style:'width:3%;border: solid 1px rgb(235, 189, 74)', value:opts[op].value});\ninput.addEventListener('change',()=> opts[op].value = +input.value);\nbuilder.create('p');\n\n}\t\t\n\nconst layerCount = editor.layerOffset;\nbuilder.create('p',{style:'color:rgb(235, 189, 74);font-weight:900;',textContent:current_template.name});\n\nbuilder.create('a',{textContent:'move targets' +': ', class:'ui',style:'pointer-events:none'});\nconst MSelect = builder.create('select',{class:'ui', style:'border:solid 1px rgb(235, 189, 74)'})\n\nfor(const grp of editor.groups){\nMSelect.appendChild(builder.create('option',{style:'font-weight:900;background-color:black;color:rgb(235, 189, 74)',textContent:grp[0],value:grp[1]}))\n}\nconst mInp = builder.create('input',{class:'ui',id:'move_targets', style:'width:10%;border: solid 1px rgb(235, 189, 74)', value:current_template.animations.move.group.map(x=>Number(x)+layerCount) });\nMSelect.addEventListener('change',()=>mInp.value = MSelect.options[MSelect.selectedIndex].value)\n\n\nconst mEase = builder.create('select',{class:'ui',id:'move_ease', style:'border:solid 1px rgb(235, 189, 74)'})\n\n\nconst easesM = [ 'easeOutBounce','easeInOutBounce','easeInBounce','easeInOutSine',  'easeInOutExpo','easeInExpo','easeOutExpo','linear'].forEach(ease=>{\nmEase.appendChild(builder.create('option',{style:'font-weight:900;background-color:black;color:rgb(235, 189, 74)',textContent:ease,value:ease}))\n});\n\nbuilder.create('a',{textContent:'&nbsc'});\n\n\n\nconst FSelect = builder.create('select',{class:'ui', style:'border:solid 1px rgb(235, 189, 74)'})\n\nfor(const grp of editor.groups){\nFSelect.appendChild(builder.create('option',{style:'font-weight:900;background-color:black;color:rgb(235, 189, 74)',textContent:grp[0],value:grp[1]}))\nFSelect.value = grp[1]\n}\nbuilder.create('a',{textContent:'fadeIn targets' +': ', class:'ui',style:'pointer-events:none'});\n const fInp = builder.create('input',{class:'ui',id:'fadeIn_targets', style:'width:10%;border: solid 1px rgb(235, 189, 74)', value:current_template.animations.fadeIn.group.map(x=>Number(x)+layerCount)});\nFSelect.addEventListener('change',()=> fInp.value = FSelect.options[FSelect .selectedIndex].value)\nconst fEase = builder.create('select',{class:'ui',id:'fadeIn_ease', style:'border:solid 1px rgb(235, 189, 74)'})\n\n\nconst easesF = ['easeInOutSine','easeInOutBounce', 'easeInBounce', 'easeOutBounce', 'easeInOutExpo','easeInExpo','easeOutExpo','linear'].forEach(ease=>{\nfEase.appendChild(builder.create('option',{style:'font-weight:900;background-color:black;color:rgb(235, 189, 74)',textContent:ease,value:ease}))\n});\n",
 "code": "const layerCount = editor.layerOffset;\n const animations = editor.interface.animation.settings.templates\n const current_template =  animations[0];\n const opts = current_template.opts;\n const move_group = document.getElementById(\"move_targets\").value.split(',').map(x=>Number(x)+layerCount);\n const fadeIn_group = document.getElementById(\"fadeIn_targets\").value.split(',').map(x=>Number(x)+layerCount);\n current_template.animations.move.ease = document.getElementById('move_ease').value;\n current_template.animations.fadeIn.ease = document.getElementById('fadeIn_ease').value;\n\n let count_0 = 0;\n move_group.forEach((ind)=>{\n if( template.layers[ind]._type!=='container'  ){\n  count_0+=1;\n  \n  const kf = editor.animator.move({\n   x:[0,current_template.animations.move.axis[0]],\n   y:[0,current_template.animations.move.axis[1]],\n   t:[0,1].map(s=>s/opts.speedOfMove.value),\n   st:count_0 * opts.staggeringMove.value + opts.moveStartTime.value +current_template.templateStartTime,\n   ease:current_template.animations.move.ease,\n   i:0},ind);\n   kf.comment = current_template.animations.move.description;\n   template.layers[ind]._positionStart[0] -= current_template.animations.move.axis[0];\n   template.layers[ind]._positionStart[1] -= current_template.animations.move.axis[1];\n   }\n })\n let count_1 = 0;\n \n fadeIn_group.forEach((ind)=>{\n count_1 +=1;\n template.layers[ind]._opacity = 0;\n const kf= editor.animator.fade({\n   op:[1],\n   t:[0,1].map(s=>s/opts.speedOfFadeIN.value),\n   st: count_1 * opts.staggeringFadein.value + opts.fadeInStartTime.value +current_template.templateStartTime,\n   ease:current_template.animations.fadeIn.ease,i:0},ind);\n   kf.comment = current_template.animations.fadeIn.description;\n   \n })\n\n\n"
}
