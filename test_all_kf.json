 {
     "title": "test_all_kf",
     "description": "",
        "settings":
        "editor.interface.animation.settings = {\n  \"templates\":\n  [\n    {\n   \"templateStartTime\":0,\n   \"name\": \"Move and appear\",\n   \"thumbnail\": \"animation.gif\",\n    \"animations\":{\n    \"fade\":{\n      \"startValue\":0,\n      \"op\":[1],\n      \"t\":[0,1],\n     \"ease\": \"easeInOutSine\",\n     \"description\":\"appearing by fading in\",\n     \"group\": [],\n    },\n    \"move\": {\n    \"startValue\":[0,1],\n     \"x\": [0,0],\n     \"y\": [0,1],\n     \"t\": [0,1],\n     \"description\":\"falling down\",\n     \"ease\":\"easeOutBounce\",\n     \"group\": []\n    },\n     \"rotate\":{\n     \"t\":[0,1],   \n     \"direction\": 1,\n     \"description\":\"rotate\",\n     \"ease\":\"linear\",\n     \"group\": []\n     },\n     \"scale\":{\n      \"startValue\":0,\n      \"x\":[1],\n      \"t\":[0,1],\n      \"description\":\"scale\",\n      \"ease\":\"linear\",\n      \"group\": []\n      },\n      \"path\":{\n      \"value\":\"M0,0C350,250,350,-250,400,0\",\n      \"speed\":[[1,1]],\n      \"t\":[0,1],\n      \"size\":0.5,\n        \"description\":\"path\",\n        \"ease\":\"linear\",\n        \"group\": []\n          }\n      \n    },  \n      \n   \"opts\": {\n   \"fadeStartTime\": {\n    \"name\": \"Fade in Start Time\",\n    \"description\":  \"when to start fade in\",\n    \"value\": 1\n   },\n\n     \"speedOfFade\": {\n    \"name\": \"Fade in Speed\",\n    \"description\":  \"How fast the objects that appear with fade in\",\n    \"value\": 1\n   },\n     \n   \"staggeringFade\": {\n    \"name\": \"Fade in Staggering\",\n    \"description\":  \"Staggering for the objects that appear with fade in\",\n    \"value\": 0.25\n   },\n     \n   \"moveStartTime\": {\n    \"name\": \"Move Start Time\",\n    \"description\":  \"How fast the objects that appear with fade in\",\n    \"value\": 1\n   },\n     \n   \"speedOfMove\": {\n    \"name\": \"Move Speed\",\n    \"description\":  \"How fast the objects drop\",\n    \"value\": 1\n   },\n     \n \n   \"staggeringMove\": {\n    \"name\": \"Move Staggering\",\n    \"description\":  \"Staggering for the objects that move\",\n    \"value\": 0.35\n   },\n     \n   \"rotateStartTime\": {\n      \"name\": \"Rotate Start Time\",\n      \"description\":  \"when to start rotating\",\n      \"value\": 1\n     },\n  \n   \"staggeringRotate\": {\n      \"name\": \"Rotate Staggering\",\n      \"description\":  \"Staggering for the objects that rotate\",\n      \"value\": 0.35\n     },\n    \"speedOfRotate\": {\n    \"name\": \"Rotate Speed\",\n    \"description\":  \"Rotation speed\",\n    \"value\": 1\n   },\n      \n    \"CyclesOfRotate\": {\n    \"name\": \"Rotate Cycles\",\n    \"description\":  \"Number of cycles\",\n    \"value\": 1\n   },\n\n   \"scaleStartTime\": {\n      \"name\": \"Scale Start Time\",\n      \"description\":  \"How fast the objects that appear with fade in\",\n      \"value\": 1\n     },\n       \n     \"speedOfScale\": {\n      \"name\": \"Scale Speed\",\n      \"description\":  \"How fast the objects drop\",\n      \"value\": 1\n     },\n       \n   \n     \"staggeringScale\": {\n      \"name\": \"Scale Staggering\",\n      \"description\":  \"Staggering for the objects that scale\",\n      \"value\": 0.35\n     },\n\n\n     \"pathStartTime\": {\n      \"name\": \"Path Start Time\",\n      \"description\":  \"How fast the objects that appear with fade in\",\n      \"value\": 1\n     },\n       \n     \"speedOfPath\": {\n      \"name\": \"Path Speed\",\n      \"description\":  \"How fast the objects drop\",\n      \"value\": 1\n     },\n       \n   \n     \"staggeringPath\": {\n      \"name\": \"Path Staggering\",\n      \"description\":  \"Staggering for the objects that path\",\n      \"value\": 0.35\n     }\n     \n  } \n    },\n    \n  ]\n\n}\n\n\n\nconst builder = editor.interface.builder;\nbuilder.parent.innerHTML = '';\nconst templates = editor.interface.animation.settings.templates\nconst current_template =  templates[0];\n\nconst opts = current_template.opts;\nbuilder.create('p',{style:'color:rgb(235, 189, 74);font-weight:900;',textContent:current_template.name});\n\nfor(const op in opts){\nbuilder.create('a',{textContent:opts[op].name +': ', class:'ui',style:'pointer-events:none'});\nconst input = builder.create('input',{class:'ui',type:'number',min:0, step:0.1, style:'width:25%;border: solid 1px rgb(235, 189, 74)', value:opts[op].value});\ninput.addEventListener('change',()=> opts[op].value = +input.value);\nbuilder.create('p');\n\n}\t\t\nconst easeArr = [ 'easeOutBounce','easeInOutBounce','easeInBounce','easeInOutSine',  'easeInOutExpo','easeInExpo','easeOutExpo','linear'];\nconst layerCount = editor.layerOffset;\nbuilder.create('p');\n\nconst createGroupPanels = (ind,assign=[0,0,0,0,0]) =>{\nObject.keys(current_template.animations).forEach((anim,assignIndex)=>{\n  builder.create('a',{textContent:anim+' targets_'+ind +': ', class:'ui',style:'pointer-events:none'});\n  const Select = builder.create('select',{class:'ui', style:'border:solid 1px rgb(235, 189, 74)'})\n  Select.appendChild(builder.create('option',{style:'font-weight:900;background-color:black;color:rgb(235, 189, 74)',textContent:'none',value:'none'}))\n  \n  for(const grp of editor.groups){\n      Select.appendChild(builder.create('option',{style:'font-weight:900;background-color:black;color:rgb(235, 189, 74)',textContent:grp[0],value:grp[1]}))\n  }\n  const inp = builder.create('input',{class:'ui',id:anim+'_targets_'+ind, style:'width:10%;border: solid 1px rgb(235, 189, 74)', value:current_template.animations.move.group.map(x=>Number(x)+layerCount) });\n  Select.addEventListener('click',()=>inp.value = Select.options[Select.selectedIndex].value)\n  \n  const eases = builder.create('select',{class:'ui',id:anim+'_ease_'+ind, style:'border:solid 1px rgb(235, 189, 74)'})\n  \n  easeArr.forEach(ease=>{\n      eases.appendChild(builder.create('option',{style:'font-weight:900;background-color:black;color:rgb(235, 189, 74)',textContent:ease,value:ease}))\n  });\n  \n  builder.create('p');\n  eases.value = current_template.animations[anim].ease;\n  Select.selectedIndex = assign[assignIndex];\n  Select.click();\n});\n\n\nbuilder.create('p');\n\n}\n\n  createGroupPanels(0,[1,2,0,0,0]);\n"
       ,
        "code":"\n  \nconst numberOfInputs = 1;\nconst layerCount = editor.layerOffset;\n const templates = editor.interface.animation.settings.templates\n const current_template =  templates[0];\n const opts = current_template.opts;\n\n\n const fade_group = Array.from({length:numberOfInputs}).map((_,index)=>{\n    if(document.getElementById(\"fade_targets_\"+index).value==='none') return null;\n    return  document.getElementById(\"fade_targets_\"+index).value.split(',').map(x=>Number(x)+layerCount)\n }).filter(Boolean).map((gr,grInd)=>{\ncurrent_template.animations.fade.ease = document.getElementById('fade_ease_'+grInd).value;\n let count = 0;\n     gr.forEach((ind)=>{\n\n    if( template.layers[ind]._type!=='container'  ){\n        count +=1;\n\n   template.layers[ind]._opacity = current_template.animations.fade.startValue;\n   const kf= editor.animator.fade({\n   op:current_template.animations.fade.op,\n   t:current_template.animations.fade.t.map(s=>s/opts.speedOfFade.value),\n   st: count * opts.staggeringFade.value + opts.fadeStartTime.value +current_template.templateStartTime,\n   ease:current_template.animations.fade.ease,i:0},ind);\n   kf.comment = current_template.animations.fade.description;\n   }\n })\n})\n\n\n const move_group = Array.from({length:numberOfInputs}).map((_,index)=>{\n   if(document.getElementById(\"move_targets_\"+index).value==='none') return null;\n   return document.getElementById(\"move_targets_\"+index).value.split(',').map(x=>Number(x)+layerCount)\n }).filter(Boolean).map((gr,grInd)=>{\n    if(gr!=='none'){\n    current_template.animations.move.ease = document.getElementById('move_ease_'+grInd).value;\n    let count = 0;\n     gr.forEach((ind)=>{\n if(template.layers[ind]._type!=='container'){\n    count+=1;\n  const kf = editor.animator.move({\n   x:current_template.animations.move.x,\n   y:current_template.animations.move.y,\n   t:current_template.animations.move.t.map(s=>s/opts.speedOfMove.value),\n   st:count * opts.staggeringMove.value + opts.moveStartTime.value +current_template.templateStartTime,\n   ease:current_template.animations.move.ease,\n   i:0},ind);\n   kf.comment = current_template.animations.move.description;\n   template.layers[ind]._positionStart[0] -= current_template.animations.move.startValue[0];\n   template.layers[ind]._positionStart[1] -= current_template.animations.move.startValue[1];\n   }\n })\n}\n})\n\n\n\n\nconst rotate_group = Array.from({length:numberOfInputs}).map((_,index)=>{\n    if(document.getElementById(\"rotate_targets_\"+index).value==='none') return null;\n    return  document.getElementById(\"rotate_targets_\"+index).value.split(',').map(x=>Number(x)+layerCount)\n }).filter(Boolean).map((gr,grInd)=>{\ncurrent_template.animations.rotate.ease = document.getElementById('rotate_ease_'+grInd).value;\n let count = 0;\n     gr.forEach((ind)=>{\n    if( template.layers[ind]._type!=='container'  ){\n        count +=1;\n const kf= editor.animator.spin({\n   a:[360*opts.CyclesOfRotate.value*current_template.animations.rotate.direction],\n   t:current_template.animations.rotate.t.map(s=>s/opts.speedOfRotate.value),\n   st: count * opts.staggeringRotate.value + opts.rotateStartTime.value +current_template.templateStartTime,\n   ease:current_template.animations.rotate.ease,i:0},ind);\n   kf.comment = current_template.animations.rotate.description;\n   }\n })\n})\n\n\nconst scale_group = Array.from({length:numberOfInputs}).map((_,index)=>{\n    if(document.getElementById(\"scale_targets_\"+index).value==='none') return null;\n    return  document.getElementById(\"scale_targets_\"+index).value.split(',').map(x=>Number(x)+layerCount)\n }).filter(Boolean).map((gr,grInd)=>{\ncurrent_template.animations.scale.ease = document.getElementById('scale_ease_'+grInd).value;\n let count = 0;\n     gr.forEach((ind)=>{\n    if( template.layers[ind]._type!=='container'  ){\n        count +=1;\n    const tempScale = template.layers[ind]._scaleTo; \n    template.layers[ind]._scaleTo = current_template.animations.scale.startValue;\n    const kf= editor.animator.resize({\n    x:tempScale +current_template.animations.scale.x,\n    t:current_template.animations.scale.t.map(s=>s/opts.speedOfScale.value),\n    st: count * opts.staggeringScale.value + opts.scaleStartTime.value +current_template.templateStartTime,\n    ease:current_template.animations.scale.ease,i:0},ind);\n    kf.comment = current_template.animations.scale.description;\n    }\n })\n})\n\n\nconst path_group = Array.from({length:numberOfInputs}).map((_,index)=>{\n    if(document.getElementById(\"path_targets_\"+index).value==='none') return null;\n    return  document.getElementById(\"path_targets_\"+index).value.split(',').map(x=>Number(x)+layerCount)\n }).filter(Boolean).map((gr,grInd)=>{\ncurrent_template.animations.path.ease = document.getElementById('path_ease_'+grInd).value;\n let count = 0;\n     gr.forEach((ind)=>{\n    if( template.layers[ind]._type!=='container'  ){\n        count +=1;\n    const kf= editor.animator.path({\n    p:current_template.animations.path.value,\n    speed: current_template.animations.path.speed,\n    size: current_template.animations.path.size,\n    t:current_template.animations.path.t.map(s=>s/opts.speedOfPath.value),\n    st: count * opts.staggeringPath.value + opts.pathStartTime.value +current_template.templateStartTime,\n    ease:current_template.animations.path.ease,i:0},ind);\n    kf.comment = current_template.animations.path.description;\n    }\n })\n})"
}
